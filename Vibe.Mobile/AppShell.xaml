<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:Vibe.Mobile.Views"
       Title="Vibe.Mobile"
       x:Class="Vibe.Mobile.AppShell"
       
       xmlns:ui="clr-namespace:Vibe.Mobile.Assets.UI"
       xmlns:core="clr-namespace:Vibe.Mobile.Core">

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
    
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource Accent}" />
                <Setter Property="Shell.ForegroundColor" Value="White" />
                <Setter Property="Shell.TitleColor" Value="White" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource Accent}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="White"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF"/>
                <Setter Property="Shell.TabBarTitleColor" Value="White"/>
            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Divider}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Accent}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Accent}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource TextIcons}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <StackLayout Padding="10"
                         BackgroundColor="{StaticResource TextIcons}"
                         HeightRequest="{OnPlatform iOS=180}">
                <Image HorizontalOptions="Center" VerticalOptions="Center"
                       Margin="10"
                       Source="icLogo" />

                <Label HorizontalOptions="End" VerticalOptions="EndAndExpand"
                       FontSize="20"
                       FontAttributes="Bold"
                       TextColor="{StaticResource Accent}"
                       Text="Vibe Selecao" />
            </StackLayout>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>
    
    <!--
        Utilizando o Shell como arquitetura de navegação, uma forma de se isolar a tela de login do restante do aplicativo é registrar essa tela como TabBar
    -->
    <TabBar>
        <ShellContent Route="{x:Static core:Rotas.Loading}" 
                      ContentTemplate="{DataTemplate local:LoadingPage}" />
        <ShellContent Route="{x:Static core:Rotas.Autenticacao}" 
                      ContentTemplate="{DataTemplate local:AutenticacaoPage}" />
    </TabBar>
    
    <!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->
    <FlyoutItem Title="Meu Perfil">
        <FlyoutItem.Icon>
            <FontImageSource Glyph="{x:Static ui:MaterialIcon.Person}"
                             Color="{StaticResource TextIcons}"
                             FontFamily="{StaticResource FontIconFamily}"
                             Size="{StaticResource FontIconSize}" />
        </FlyoutItem.Icon>
        <ShellContent Route="{x:Static core:Rotas.MeuPerfil}" 
                      ContentTemplate="{DataTemplate local:MeuPerfilPage}" />
    </FlyoutItem>

    <FlyoutItem Title="Clientes">
        <FlyoutItem.Icon>
            <FontImageSource Glyph="{x:Static ui:MaterialIcon.Groups}"
                             Color="{StaticResource TextIcons}"
                             FontFamily="{StaticResource FontIconFamily}"
                             Size="{StaticResource FontIconSize}" />
        </FlyoutItem.Icon>
        <ShellContent Route="{x:Static core:Rotas.Clientes}" 
                      ContentTemplate="{DataTemplate local:ClientesPage}" />
    </FlyoutItem>

    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <MenuItem Text="Logout" 
              StyleClass="MenuItemLayoutStyle" 
              Clicked="OnMenuItemClicked">
    </MenuItem>

    <!-- Optional Templates 
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid>ContentHere</Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>

    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    -->

</Shell>
